{"version":3,"sources":["webpack:///./src/pages/talks.tsx","webpack:///./src/components/Head/Head.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/Head/og_image.png","webpack:///./src/components/Wrapper.tsx"],"names":["Talks","render","_css","_css2","react__WEBPACK_IMPORTED_MODULE_3__","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","a","title","description","_components_Wrapper__WEBPACK_IMPORTED_MODULE_8__","paddingTop","paddingBottom","glamor_jsxstyle__WEBPACK_IMPORTED_MODULE_4__","Column","css","_theme__WEBPACK_IMPORTED_MODULE_6__","media","medium","flexDirection","justifyContent","Block","component","color","dark","fontWeight","fontSize","letterSpacing","marginBottom","flex","marginRight","lineHeight","position","background","white","key","gray","bold","InlineBlock","fontStyle","display","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","Link","&:hover","textDecoration","marginLeft","purple","props","to","_constants__WEBPACK_IMPORTED_MODULE_9__","b","map","talk","i","datetime","Date","date","toISOString","href","Component","talksQuery","258","e","t","n","o","r","c","m","l","p","s","d","Head_Head","react","Fragment","className","Helmet_default","meta","name","content","image","og_image_default","filter","Boolean","displayName","y","getRandomInt","min","max","Math","floor","random","getRandomFloat","toFixed","dotData","items","colors","x","size","opacity","push","length","Layout_Layout","_React$Component","Layout","apply","this","arguments","inheritsLoose_default","prototype","Nav","theme","showName","dot","style","left","top","height","width","borderRadius","zIndex","backgroundColor","right","bottom","jsxstyle","role","id","children","Footer","260","module","exports","__webpack_require__","264","Wrapper","react__WEBPACK_IMPORTED_MODULE_1__","glamor_jsxstyle__WEBPACK_IMPORTED_MODULE_3__","Object","assign","maxWidth","_theme__WEBPACK_IMPORTED_MODULE_2__","wrapperWidth","margin","paddingLeft","paddingRight"],"mappings":"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","file":"component---src-pages-talks-tsx-078516a42f92b75ad155.js","sourcesContent":["import '../reset.css';\nimport * as React from 'react';\nimport { Block, Row, InlineBlock, Column } from 'glamor/jsxstyle';\nimport { Link } from 'react-router-dom';\nimport { Social } from '../components/Social';\nimport { theme } from '../theme';\nimport { FeaturedProject } from '../components/FeaturedProject';\nimport { Repo, RepoProps } from '../components/Repo';\nimport { Nav } from '../components/Nav/Nav';\nimport { Layout } from '../components/Layout';\nimport { Wrapper } from '../components/Wrapper';\nimport { TALKS } from '../constants';\n\nexport default class Talks extends React.Component<void> {\n  render() {\n    return (\n      <Layout\n        title=\"Talks &amp; Workshops\"\n        description=\"Engineering &amp; Design Talks, Workshops, &amp; Lectures\"\n      >\n        <Wrapper paddingTop=\"10rem\" paddingBottom=\"5rem\">\n          <Column\n            css={{\n              [theme.media.medium]: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n              },\n            }}\n          >\n            <Block\n              component=\"h1\"\n              color={theme.color.dark}\n              fontWeight={800}\n              fontSize=\"2.75rem\"\n              letterSpacing=\"-.03em\"\n              marginBottom=\"3rem\"\n              flex=\"1\"\n              css={{\n                [theme.media.medium]: {\n                  marginRight: '.5rem',\n                },\n              }}\n            >\n              Talks\n            </Block>\n            <Block\n              color={theme.color.dark}\n              letterSpacing=\"-.01em\"\n              lineHeight=\"1.3\"\n              paddingTop=\".1rem\"\n              flex=\"3\"\n              position=\"relative\"\n              background={theme.color.white}\n            >\n              <Block\n                key={`cta`}\n                marginBottom=\"3rem\"\n                background={theme.color.white}\n              >\n                <Block\n                  component=\"div\"\n                  color={theme.color.gray}\n                  marginBottom=\".5rem\"\n                  fontSize=\"1rem\"\n                >\n                  xxx 2018\n                </Block>\n                <Block\n                  fontWeight={theme.bold}\n                  marginBottom=\"1rem\"\n                  fontSize=\"1.5rem\"\n                >\n                  <InlineBlock\n                    fontStyle=\"italic\"\n                    component=\"span\"\n                    color={theme.color.gray}\n                  >\n                    My talk @ Your Conference/Company{' '}\n                  </InlineBlock>\n                  <InlineBlock\n                    display\n                    component={Link}\n                    fontWeight={theme.bold}\n                    css={{\n                      '&:hover': {\n                        textDecoration: 'underline',\n                      },\n                    }}\n                    marginLeft=\".25rem\"\n                    textDecoration=\"underline\"\n                    color={theme.color.purple}\n                    fontStyle=\"italic\"\n                    props={{ to: '/contact' }}\n                  >\n                    ...Contact Me\n                  </InlineBlock>\n                </Block>\n\n                {/* <Block\n\n                        color={theme.color.gray}\n                        fontSize=\"1.25rem\"\n                        props={{ to: node.frontmatter.path }}\n                      >\n                        {node.frontmatter.description}\n                      </Block> */}\n              </Block>\n              {TALKS.map((talk, i: number) => (\n                <Block\n                  key={`${talk.title}-${i}`}\n                  marginBottom=\"3rem\"\n                  background={theme.color.white}\n                >\n                  <Block\n                    component=\"time\"\n                    color={theme.color.gray}\n                    marginBottom=\".5rem\"\n                    fontSize=\"1rem\"\n                    props={{ datetime: new Date(talk.date).toISOString() }}\n                  >\n                    {talk.date}\n                  </Block>\n                  <h3>\n                    <Block\n                      component=\"a\"\n                      fontWeight={theme.bold}\n                      marginBottom=\"1rem\"\n                      fontSize=\"1.5rem\"\n                      css={{\n                        '&:hover': {\n                          textDecoration: 'underline',\n                        },\n                      }}\n                      props={{ href: talk.href }}\n                    >\n                      {talk.title}\n                    </Block>\n                  </h3>\n\n                  {/* <Block\n\n                        color={theme.color.gray}\n                        fontSize=\"1.25rem\"\n                        props={{ to: node.frontmatter.path }}\n                      >\n                        {node.frontmatter.description}\n                      </Block> */}\n                </Block>\n              ))}\n            </Block>\n          </Column>\n        </Wrapper>\n      </Layout>\n    );\n  }\n}\n\nexport const talksQuery = graphql`\n  query TalkPosts {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            description\n            date\n          }\n          headings {\n            depth\n            value\n          }\n        }\n      }\n    }\n  }\n`;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport ogImage from './og_image.png';\n\nexport interface HeadProps {\n  title: string;\n  description?: string;\n  image?: string;\n}\n// @see https://github.com/nfl/react-helmet/issues/373\n// Use arrays. lol.\nexport const Head: React.SFC<HeadProps> = props => {\n  return (\n    <>\n      <div className=\"skipnav\">\n        <a href=\"#maincontent\">Skip to main content</a>{' '}\n        <a href=\"#footer\">Skip to footer</a>\n      </div>\n      <Helmet\n        title={props.title}\n        meta={[\n          { name: 'twitter:title', content: props.title },\n          { name: 'og:title', content: props.title },\n          { name: 'twitter:site', content: '@jaredpalmer' },\n          props.description && {\n            name: 'description',\n            content: props.description,\n          },\n          props.description && {\n            name: 'twitter:description',\n            content: props.description,\n          },\n          ,\n          props.description && {\n            name: 'og:description',\n            content: props.description,\n          },\n\n          props.image && {\n            name: 'twitter:card',\n            content: 'summary_large_image',\n          },\n\n          {\n            name: 'twitter:image',\n            content: !!props.image ? props.image : ogImage,\n          },\n\n          {\n            name: 'og:image',\n            content: !!props.image ? props.image : ogImage,\n          },\n        ].filter(Boolean)}\n      />\n    </>\n  );\n};\n\nHead.displayName = 'Head';\n","import '../reset.css';\nimport * as React from 'react';\nimport { css } from 'glamor';\nimport { Nav, NavbarProps } from './Nav/Nav';\nimport { Block, Row } from 'glamor/jsxstyle';\nimport { theme } from '../theme';\nimport { Footer } from './Footer';\nimport { Head } from './Head';\nexport interface LayoutProps {\n  children?: any;\n  showName?: NavbarProps['showName'];\n  title: string;\n  description: string;\n  image?: string;\n  theme?: 'normal' | 'inverse' | 'transparent';\n}\n\nvar dots = 50;\n\nfunction getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomItem(items: string[]) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nfunction getRandomFloat(min: number, max: number) {\n  return (Math.random() * (min - max) + min).toFixed(1);\n}\n\nconst dotData: {\n  x: number;\n  y: number;\n  size: string;\n  opacity: string;\n  color: string;\n}[] = [];\n\nfunction makeDots() {\n  const colors = ['#D441D0', '#80B9FE', '#F5A623', '#7ED321', '#F8E71C'];\n  for (let i = 0; i < dots; i++) {\n    const x = getRandomInt(0, 100);\n    const y = getRandomInt(0, 100);\n    const size = getRandomFloat(0.4, 1.25);\n    const opacity = getRandomFloat(0.9, 1);\n    dotData.push({ x, y, size, opacity, color: getRandomItem(colors) });\n  }\n}\n\nmakeDots();\n\nexport class Layout extends React.Component<LayoutProps> {\n  render() {\n    return (\n      <>\n        <Head\n          title={this.props.title}\n          description={this.props.description}\n          image={this.props.image}\n        />\n        <Nav\n          theme={this.props.theme || 'normal'}\n          showName={this.props.showName || true}\n        />\n\n        {dotData.map((dot, i) => (\n          <div\n            key={`top-dot-${dot.y}-${dot.x}-${i}`}\n            style={{\n              position: 'absolute',\n              left: dot.x + '%',\n              top: dot.y + '%',\n              height: dot.size + 'rem',\n              width: dot.size + 'rem',\n              opacity: dot.opacity as any,\n              borderRadius: '50%',\n              zIndex: 0,\n              backgroundColor: dot.color,\n            }}\n          />\n        ))}\n\n        {dotData.map((dot, i) => (\n          <div\n            key={`bottom-dot-${dot.y}-${dot.x}-${i}`}\n            style={{\n              position: 'absolute',\n              right: dot.x + '%',\n              bottom: dot.y + '%',\n              height: dot.size + 'rem',\n              width: dot.size + 'rem',\n              opacity: dot.opacity as any,\n              borderRadius: '50%',\n              zIndex: 0,\n              backgroundColor: dot.color,\n            }}\n          />\n        ))}\n        <Block\n          background=\"#fff\"\n          props={{ role: 'main', id: 'maincontent' }}\n          component=\"main\"\n        >\n          {this.props.children}\n        </Block>\n        <Footer />\n      </>\n    );\n  }\n}\n\n(Layout as any).displayName = 'Layout';\n","module.exports = __webpack_public_path__ + \"static/og_image-757a055db0f4e9e6aaaa6003929b3eff.png\";","import * as React from 'react';\nimport { theme } from '../theme';\nimport { Block } from 'glamor/jsxstyle';\n\nexport const Wrapper: React.SFC<any> = props => {\n  return (\n    <Block\n      maxWidth={theme.wrapperWidth}\n      margin=\"0 auto\"\n      paddingLeft=\"1rem\"\n      paddingRight=\"1rem\"\n      {...props}\n    />\n  );\n};\n\n(Wrapper as any).displayName = 'Wrapper';\n"],"sourceRoot":""}