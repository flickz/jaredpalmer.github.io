{"version":3,"sources":["webpack:///./src/components/Fieldset.tsx","webpack:///./src/pages/contact.tsx","webpack:///./src/components/Head/Head.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/Head/og_image.png","webpack:///./src/components/Wrapper.tsx"],"names":["LabelPoser","a","label","open","y","opacity","transition","ease","duration","closed","initialPose","Fieldset_Label","props","react","createElement","jsxstyle","Block","Object","assign","component","Fieldset_Fieldset","_ref","id","_render","render","objectWithoutProperties_default","position","marginBottom","formik_esm","fieldProps","Fragment","htmlFor","textTransform","fontSize","letterSpacing","zIndex","color","theme","gray","pose","field","value","displayName","n","d","t","inputStyles","appearance","fontFamily","fontStyle","verticalAlign","display","margin","border","padding","background","borderBottom","grayLightest","borderRadius","lineHeight","outline","width","&:focus","grayLighter","&:placeholder","contact_Contact","Contact","_this","e","apply","this","arguments","state","_css","_css2","Layout","title","description","Wrapper","paddingTop","paddingBottom","Column","css","media","medium","flexDirection","justifyContent","flex","marginRight","dark","fontWeight","white","c","initialValues","name","email","message","onSubmit","v","console","log","b","form","placeholder","autoFocus","required","_ref2","type","_ref3","rows","minWidth","marginTop","textAlign","bold","transform","cursor","backgroundImage","&:hover","boxShadow","&:active","Component","258","r","o","i","l","m","s","p","Head_Head","className","href","Helmet_default","meta","content","image","og_image_default","filter","Boolean","getRandomInt","min","max","Math","floor","random","getRandomFloat","toFixed","dotData","items","colors","x","size","push","length","Layout_Layout","_React$Component","inheritsLoose_default","prototype","Nav","showName","map","dot","key","style","left","top","height","backgroundColor","right","bottom","role","children","Footer","260","module","exports","__webpack_require__","264","react__WEBPACK_IMPORTED_MODULE_1__","glamor_jsxstyle__WEBPACK_IMPORTED_MODULE_3__","maxWidth","_theme__WEBPACK_IMPORTED_MODULE_2__","wrapperWidth","paddingLeft","paddingRight"],"mappings":"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","file":"component---src-pages-contact-tsx-dfdddbd319ae318ac9b5.js","sourcesContent":["import * as React from 'react';\nimport { Toggle, ToggleProps } from './Toggle';\nimport { Block } from 'glamor/jsxstyle';\nimport { Field, FieldProps } from 'formik';\nimport posed from 'react-pose';\nimport { PoseBlock } from './PoseView';\nimport { theme } from '../theme';\n\nconst LabelPoser = posed.label({\n  open: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      y: { ease: 'circOut', duration: 300 },\n      opacity: { ease: 'easeIn', duration: 200 },\n    },\n  },\n  closed: {\n    y: 20,\n    opacity: 0,\n    transition: {\n      y: { ease: 'circOut', duration: 300 },\n      opacity: { ease: 'easeIn', duration: 200 },\n    },\n  },\n  initialPose: 'closed',\n});\n\nexport const Label: React.SFC<any> = props => (\n  <Block component={LabelPoser} {...props} />\n);\n\nexport const Fieldset: React.SFC<any> = ({ label, id, render, ...props }) => {\n  return (\n    <Block position=\"relative\" marginBottom=\"2rem\">\n      <Field\n        id={id}\n        {...props}\n        render={(fieldProps: FieldProps) => (\n          <>\n            <Label\n              htmlFor={id}\n              position=\"relative\"\n              textTransform=\"uppercase\"\n              opacity=\"0\"\n              fontSize=\".85rem\"\n              marginBottom=\".5rem\"\n              letterSpacing=\".025em\"\n              zIndex=\"1\"\n              color={theme.color.gray}\n              pose={fieldProps.field.value !== '' ? 'open' : 'closed'}\n            >\n              {label}\n            </Label>\n            {render(fieldProps)}\n          </>\n        )}\n      />\n    </Block>\n  );\n};\n\n(Fieldset as any).displayName = 'Fieldset';\n","import '../reset.css';\nimport * as React from 'react';\nimport { Block, Row, InlineBlock, Column } from 'glamor/jsxstyle';\nimport { theme } from '../theme';\nimport { RepoProps } from '../components/Repo';\nimport { Layout } from '../components/Layout';\nimport { Wrapper } from '../components/Wrapper';\nimport { Formik, Form, FieldProps } from 'formik';\nimport { Fieldset } from '../components/Fieldset';\n\nexport interface TalksState {\n  repos?: RepoProps[];\n}\n\nconst inputStyles = {\n  appearance: 'none',\n  fontFamily: 'inherit',\n  fontStyle: 'inherit',\n  verticalAlign: 'baseline',\n  display: 'block',\n  position: 'relative',\n  margin: '0 0 2rem',\n  border: 0,\n  padding: '.5rem 0',\n  background: 'transparent',\n  borderBottom: `1px solid ${theme.color.grayLightest}`,\n  borderRadius: 0,\n  fontSize: 18,\n  lineHeight: '1.55556',\n  outline: 0,\n  zIndex: 2,\n  width: '100%',\n  transition: 'all 200ms ease',\n  '&:focus': {\n    borderBottom: `1px solid ${theme.color.grayLighter}`,\n  },\n  '&:placeholder': {\n    fontSize: 18,\n  },\n};\n\nexport default class Contact extends React.Component<void, TalksState> {\n  state: TalksState = {};\n  render() {\n    return (\n      <Layout\n        title=\"Contact me about a project\"\n        description=\"Contact Jared Palmer, about your design, development, or strategy project.\"\n      >\n        <Wrapper paddingTop=\"10rem\" paddingBottom=\"5rem\">\n          <Column\n            css={{\n              [theme.media.medium]: {\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n              },\n            }}\n          >\n            <Block\n              flex=\"3\"\n              marginBottom=\"3rem\"\n              css={{\n                [theme.media.medium]: {\n                  marginRight: '1rem',\n                },\n              }}\n            >\n              <Block\n                component=\"h2\"\n                color={theme.color.dark}\n                fontWeight={800}\n                marginBottom=\"1rem\"\n                fontSize=\"3rem\"\n                letterSpacing=\"-.03em\"\n              >\n                Hello.\n              </Block>\n              <Block\n                color={theme.color.grayLighter}\n                fontSize=\"2rem\"\n                lineHeight=\"1.3\"\n                fontWeight={300}\n                letterSpacing=\"-.03em\"\n              >\n                Got a project to discuss?\n              </Block>\n            </Block>\n            <Block\n              color={theme.color.dark}\n              letterSpacing=\"-.01em\"\n              lineHeight=\"1.3\"\n              flex=\"5\"\n              position=\"relative\"\n              paddingTop=\"1rem\"\n              background={theme.color.white}\n            >\n              <Formik\n                initialValues={{ name: '', email: '', message: '' }}\n                onSubmit={v => console.log(v)}\n              >\n                <Form>\n                  <Fieldset\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Name\"\n                    render={({ field, form }: FieldProps) => (\n                      <Block\n                        component=\"input\"\n                        props={{\n                          ...field,\n                          placeholder: 'Name',\n                          autoFocus: true,\n                          required: true,\n                        }}\n                        css={inputStyles}\n                      />\n                    )}\n                  />\n                  <Fieldset\n                    label=\"Email\"\n                    id=\"email\"\n                    name=\"email\"\n                    render={({ field, form }: FieldProps) => (\n                      <Block\n                        component=\"input\"\n                        props={{\n                          ...field,\n                          type: 'email',\n                          placeholder: 'Email',\n                          required: true,\n                        }}\n                        css={inputStyles}\n                      />\n                    )}\n                  />\n\n                  <Fieldset\n                    id=\"message\"\n                    name=\"message\"\n                    label=\"Tell me all about it\"\n                    render={({ field, form }: FieldProps) => (\n                      <Block\n                        component=\"textarea\"\n                        css={inputStyles}\n                        props={{\n                          ...field,\n                          placeholder: 'Tell me about it',\n                          rows: 6,\n                          required: true,\n                        }}\n                      />\n                    )}\n                  />\n                  <Block\n                    component=\"button\"\n                    props={{ type: 'submit' }}\n                    color={theme.color.white}\n                    padding=\"1rem 1.25rem\"\n                    minWidth={200}\n                    marginTop=\"3rem\"\n                    display=\"block\"\n                    position=\"relative\"\n                    textTransform=\"uppercase\"\n                    borderRadius={3}\n                    border=\"0\"\n                    fontSize=\"1rem\"\n                    textAlign=\"center\"\n                    background=\"#7DE2FF\"\n                    fontWeight={theme.bold}\n                    transform=\"translateY(0)\"\n                    cursor=\"pointer\"\n                    backgroundImage=\"linear-gradient(-134deg, #7DE2FF  0%, #489AFF 100%)\"\n                    css={{\n                      transition: 'all 100ms ease',\n                      '&:hover': {\n                        transform: `translateY(-1px)`,\n                        boxShadow: `0 4px 8px rgba(0,0,0,.1)`,\n                      },\n                      '&:active': {\n                        transform: `translateY(0)`,\n                        // boxShadow: `0 4px 8px rgba(0,0,0,.1)`,\n                      },\n                    }}\n                  >\n                    Submit\n                  </Block>\n                </Form>\n              </Formik>\n            </Block>\n          </Column>\n        </Wrapper>\n      </Layout>\n    );\n  }\n}\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport ogImage from './og_image.png';\n\nexport interface HeadProps {\n  title: string;\n  description?: string;\n  image?: string;\n}\n// @see https://github.com/nfl/react-helmet/issues/373\n// Use arrays. lol.\nexport const Head: React.SFC<HeadProps> = props => {\n  return (\n    <>\n      <div className=\"skipnav\">\n        <a href=\"#maincontent\">Skip to main content</a>{' '}\n        <a href=\"#footer\">Skip to footer</a>\n      </div>\n      <Helmet\n        title={props.title}\n        meta={[\n          { name: 'twitter:title', content: props.title },\n          { name: 'og:title', content: props.title },\n          { name: 'twitter:site', content: '@jaredpalmer' },\n          props.description && {\n            name: 'description',\n            content: props.description,\n          },\n          props.description && {\n            name: 'twitter:description',\n            content: props.description,\n          },\n          ,\n          props.description && {\n            name: 'og:description',\n            content: props.description,\n          },\n\n          props.image && {\n            name: 'twitter:card',\n            content: 'summary_large_image',\n          },\n\n          {\n            name: 'twitter:image',\n            content: !!props.image ? props.image : ogImage,\n          },\n\n          {\n            name: 'og:image',\n            content: !!props.image ? props.image : ogImage,\n          },\n        ].filter(Boolean)}\n      />\n    </>\n  );\n};\n\nHead.displayName = 'Head';\n","import '../reset.css';\nimport * as React from 'react';\nimport { css } from 'glamor';\nimport { Nav, NavbarProps } from './Nav/Nav';\nimport { Block, Row } from 'glamor/jsxstyle';\nimport { theme } from '../theme';\nimport { Footer } from './Footer';\nimport { Head } from './Head';\nexport interface LayoutProps {\n  children?: any;\n  showName?: NavbarProps['showName'];\n  title: string;\n  description: string;\n  image?: string;\n  theme?: 'normal' | 'inverse' | 'transparent';\n}\n\nvar dots = 50;\n\nfunction getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomItem(items: string[]) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nfunction getRandomFloat(min: number, max: number) {\n  return (Math.random() * (min - max) + min).toFixed(1);\n}\n\nconst dotData: {\n  x: number;\n  y: number;\n  size: string;\n  opacity: string;\n  color: string;\n}[] = [];\n\nfunction makeDots() {\n  const colors = ['#D441D0', '#80B9FE', '#F5A623', '#7ED321', '#F8E71C'];\n  for (let i = 0; i < dots; i++) {\n    const x = getRandomInt(0, 100);\n    const y = getRandomInt(0, 100);\n    const size = getRandomFloat(0.4, 1.25);\n    const opacity = getRandomFloat(0.9, 1);\n    dotData.push({ x, y, size, opacity, color: getRandomItem(colors) });\n  }\n}\n\nmakeDots();\n\nexport class Layout extends React.Component<LayoutProps> {\n  render() {\n    return (\n      <>\n        <Head\n          title={this.props.title}\n          description={this.props.description}\n          image={this.props.image}\n        />\n        <Nav\n          theme={this.props.theme || 'normal'}\n          showName={this.props.showName || true}\n        />\n\n        {dotData.map((dot, i) => (\n          <div\n            key={`top-dot-${dot.y}-${dot.x}-${i}`}\n            style={{\n              position: 'absolute',\n              left: dot.x + '%',\n              top: dot.y + '%',\n              height: dot.size + 'rem',\n              width: dot.size + 'rem',\n              opacity: dot.opacity as any,\n              borderRadius: '50%',\n              zIndex: 0,\n              backgroundColor: dot.color,\n            }}\n          />\n        ))}\n\n        {dotData.map((dot, i) => (\n          <div\n            key={`bottom-dot-${dot.y}-${dot.x}-${i}`}\n            style={{\n              position: 'absolute',\n              right: dot.x + '%',\n              bottom: dot.y + '%',\n              height: dot.size + 'rem',\n              width: dot.size + 'rem',\n              opacity: dot.opacity as any,\n              borderRadius: '50%',\n              zIndex: 0,\n              backgroundColor: dot.color,\n            }}\n          />\n        ))}\n        <Block\n          background=\"#fff\"\n          props={{ role: 'main', id: 'maincontent' }}\n          component=\"main\"\n        >\n          {this.props.children}\n        </Block>\n        <Footer />\n      </>\n    );\n  }\n}\n\n(Layout as any).displayName = 'Layout';\n","module.exports = __webpack_public_path__ + \"static/og_image-757a055db0f4e9e6aaaa6003929b3eff.png\";","import * as React from 'react';\nimport { theme } from '../theme';\nimport { Block } from 'glamor/jsxstyle';\n\nexport const Wrapper: React.SFC<any> = props => {\n  return (\n    <Block\n      maxWidth={theme.wrapperWidth}\n      margin=\"0 auto\"\n      paddingLeft=\"1rem\"\n      paddingRight=\"1rem\"\n      {...props}\n    />\n  );\n};\n\n(Wrapper as any).displayName = 'Wrapper';\n"],"sourceRoot":""}